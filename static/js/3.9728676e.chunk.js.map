{"version":3,"sources":["components/profile/profileInfo/profileInfo.module.css","components/profile/profile.module.css","components/profile/myPosts/myPosts.module.css","components/profile/myPosts/post/post.module.css","components/profile/myPosts/post/post.js","components/profile/myPosts/myPosts.js","components/profile/myPosts/myPostsContainer.js","components/profile/profileInfo/profileStatusWithHooks.js","components/profile/profileInfo/profileInfo.js","components/profile/Profile.js","components/profile/profileContainer.js"],"names":["module","exports","Post","props","message","likeCount","deletePost","id","className","s","item","onClick","src","alt","postMessage","required","validators","maxLenght10","maxLenghtCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","autoComplete","validate","type","MyPosts","React","memo","addPost","posts","myPostsElements","map","post","postsBlock","formData","newPostText","postsList","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setstatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","target","ProfileInfo","profile","profileInfo","descriptionBlock","fullName","photos","large","userPhoto","aboutMe","Profile","header","content","ProfileContainer","this","getUserProfile","getUserStatus","userId","match","params","authorizedUserId","history","push","Component","WithUrlDataContainerComponent","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9728676e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__35itp\",\"descriptionBlock\":\"profileInfo_descriptionBlock__3kZOE\",\"status\":\"profileInfo_status__yR8Bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"profile_header__3I3Qt\",\"content\":\"profile_content__3G8KZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"myPosts_postsBlock__3CABP\",\"postsList\":\"myPosts_postsList__2EXqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__2Gqf7\",\"postMessage\":\"post_postMessage__3xUu-\",\"likeCount\":\"post_likeCount__WOU1B\"};","import React from 'react'\r\nimport s from './post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    const {message, likeCount, deletePost, id} = props\r\n\r\n    const onDeletePost = () => {\r\n        deletePost(id)\r\n    }\r\n    return(\r\n            <div className={s.item}>\r\n                <button onClick={onDeletePost}>del</button>   \r\n                <img src='https://sdelaicomp.ru/wp-content/uploads/2019/06/AnimeNaAvuVVK_dev_.jpg' alt=''>\r\n                </img>\r\n                <span className={`${s.postMessage}`}>{`${message}`}</span>\r\n                <span className={`${s.likeCount}`}>like: {`${likeCount}`}\r\n                     \r\n                </span>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport {Post}","import React from 'react';\r\nimport s from './myPosts.module.css'\r\nimport {Post} from './post/post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {Textarea} from '../../common/formsControls/formsControls'\r\nimport {validators} from '../../../utils/validators/validators'\r\n\r\n\r\nconst {required, maxLenghtCreator} = validators\r\nconst maxLenght10 = maxLenghtCreator(10)\r\n\r\nconst NewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                    name={'newPostText'}\r\n                    component={Textarea}\r\n                    placeholder={`Введите текст`}\r\n                    autoComplete={'postText'}\r\n                    validate={[\r\n                        required,\r\n                        maxLenght10\r\n                    ]}\r\n                />\r\n            </div>\r\n            <button\r\n                type={'submit'}\r\n                className='btn btn-success'\r\n            >Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form: 'newPostPostForm',\r\n})(NewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const {addPost, posts, deletePost} = props\r\n    \r\n\r\n    const onAddPost = (formData) => {\r\n        addPost(formData.newPostText)\r\n    }\r\n\r\n    const myPostsElements = posts.map(post => {\r\n        return <Post \r\n                    key={post.id}\r\n                    id ={post.id}\r\n                    message={post.message}\r\n                    likeCount={post.likeCount}\r\n                    deletePost={deletePost}\r\n                />\r\n    })\r\n\r\n    return (\r\n        <div className={`${s.postsBlock}`}>\r\n                <h3>My Posts</h3>\r\n                <PostReduxForm\r\n                    onSubmit={onAddPost}\r\n                />\r\n\r\n            <div className={`${s.postsList}`}>\r\n                {myPostsElements}\r\n            </div>\r\n        </div> \r\n    )    \r\n})\r\n\r\n\r\n// class MyPosts extends PureComponent {\r\n    \r\n//     constructor(props) {\r\n//         super(props)\r\n        \r\n//         const {addPost} = props\r\n\r\n//         this.onAddPost = (formData) => {\r\n//             addPost(formData.newPostText)\r\n//         }\r\n    \r\n//         this.renderPosts = (posts) => {\r\n//             return posts.map(post => {\r\n//                 return <Post \r\n//                             key={post.id}\r\n//                             message={post.message}\r\n//                             likeCount={post.likeCount}\r\n//                         />\r\n//             })\r\n//         }\r\n  \r\n//     }\r\n\r\n//     // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n//     //     return nextProps !== this.props ||\r\n//     //            nextState !== this.state \r\n//     // }\r\n\r\n//     render() {\r\n\r\n//         const {posts} = this.props\r\n//         return (\r\n//             <div className={`${s.postsBlock}`}>\r\n//                     <h3>My Posts</h3>\r\n//                     <PostReduxForm\r\n//                         onSubmit={this.onAddPost}\r\n//                     />\r\n    \r\n//                 <div className={`${s.postsList}`}>\r\n//                     {this.renderPosts(posts)}\r\n//                 </div>\r\n//             </div> \r\n//         )        \r\n//     }\r\n// }\r\n \r\n\r\nexport {MyPosts}","import {MyPosts} from './myPosts'\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {posts, newPostText} = state.profilePage\r\n\r\n    return {\r\n        posts: posts,\r\n        newPostText: newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    \r\n    return{ \r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport {MyPostsContainer}","import React, { useEffect, useState } from 'react'\r\nimport s from './profileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setstatus] = useState(props.status)\r\n\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     };\r\n    // }, [input]);\r\n    \r\n    useEffect(() => {\r\n        setstatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setstatus (e.target.value)\r\n    }\r\n\r\n    \r\n    return (\r\n        \r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}\r\n                        className={s.status}\r\n                        //ref={this.statusInputRef}\r\n                        >{props.status || '---'}\r\n                    </span>\r\n                </div>\r\n            }    \r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus = {true}\r\n                        onBlur={deactivateEditMode}\r\n                        value = {status}\r\n                        onChange={onStatusChange}\r\n                    ></input>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n} \r\n\r\n\r\nexport {ProfileStatusWithHooks}","import React from 'react';\r\nimport { Preloader } from '../../common/preloader/preloader';\r\n// import {ProfileStatus} from './profileStatus'\r\nimport s from './profileInfo.module.css'\r\nimport userPhoto from '../../../assets/img/user.png'\r\nimport { ProfileStatusWithHooks } from './profileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  const {profile, status, updateStatus} = props\r\n\r\n  if (!profile) {\r\n      return (\r\n          <Preloader />\r\n      )\r\n  }\r\n\r\n  \r\n  return (\r\n      <div className={`${s.profileInfo}`}>\r\n          {/* <img  src='https://24tv.ua/resources/photos/news/1200x675_DIR/202006/1360434.jpg?202006160247' alt='124'></img> */}\r\n          \r\n          <div className={`${s.descriptionBlock}`}>\r\n              <h4>{profile.fullName}</h4> \r\n              <img src={profile.photos.large ? profile.photos.large : userPhoto} alt='profilePhoto'/>\r\n              <ProfileStatusWithHooks\r\n                  status={status}\r\n                  updateStatus={updateStatus}\r\n              />\r\n              <p>{profile.aboutMe}</p>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {ProfileInfo}","\r\nimport React from 'react';\r\nimport s from './profile.module.css'\r\nimport {MyPostsContainer} from './myPosts/myPostsContainer'\r\nimport { ProfileInfo } from './profileInfo/profileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <main className={s.profile}>\r\n            <div className={`${s.header}`}>\r\n                <ProfileInfo\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus = {props.updateStatus}\r\n                />\r\n            </div>\r\n            <div className={`${s.content}`}>\r\n                <MyPostsContainer\r\n                    deletePost={props.deletePost}\r\n                    //store = {store}\r\n                />\r\n            </div> \r\n        </main>\r\n    )\r\n}\r\n\r\nexport {Profile}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Profile} from './Profile'\r\nimport { getUserProfile, getUserStatus, updateStatus, deletePost } from '../../redux/profile-reducer'\r\nimport {  withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n   \r\n    \r\n    componentDidMount() {\r\n        \r\n        const {getUserProfile, getUserStatus} = this.props\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        getUserProfile(userId)\r\n        getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus = {this.props.updateStatus}\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst WithUrlDataContainerComponent = compose(\r\n    connect(mapStateToProps, {deletePost, getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n\r\nexport default WithUrlDataContainerComponent"],"sourceRoot":""}