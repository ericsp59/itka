{"version":3,"sources":["components/dialogs/dialogs.module.css","components/dialogs/messageItem/messageItem.module.css","components/dialogs/messageItem/messageItem.js","components/dialogs/dialogs.js","hoc/withAuthRedirect.js","components/dialogs/dialogsContainer.js"],"names":["module","exports","MessageItem","props","text","date","msgClass","ItsMy","s","itsMy","itsNotMy","className","messages__item","required","validators","maxLenght10","maxLenghtCreator","Dialogs","renderMessages","dialogsPage","messages","map","item","message","id","addNewMessage","formdata","console","log","newMessageBody","sendMessage","selectedDialog","this","dialogsMain","dialogs","header","dialogs__list","messages__list","addMesageBlock","AddMessageReduxForm","onSubmit","React","Component","reduxForm","form","handleSubmit","type","Field","placeholder","name","component","TextInput","autoComplete","validate","mapStateToPropsForRedirect","state","auth","isAuth","DialogsContainer","compose","connect","dispatch","sendMessageCreator","updateSelectedDialog","userId","updateSelectedDialogCreator","RedirectComponent","to"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,OAAS,wBAAwB,QAAU,yBAAyB,cAAgB,+BAA+B,eAAiB,gCAAgC,SAAW,0BAA0B,eAAiB,kC,oBCAvRD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,MAAQ,2BAA2B,SAAW,gC,yJCE/GC,EAAc,SAACC,GAAW,IACrBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KACTC,EAAW,GAGf,OAFWA,EAFiBH,EAATI,MAEGC,IAAEC,MACRD,IAAEE,SAEd,qCACA,qBAAIC,UAAS,UAAKH,IAAEI,eAAP,YAAyBN,GAAtC,UACI,4BAAIF,IACJ,8BAAMC,OAGV,2B,gBCRDQ,EAA8BC,IAA9BD,SACDE,GAAcC,EADiBF,IAApBE,kBACoB,IAE/BC,E,4MAMFC,eAAiB,WAEb,OADmB,EAAKf,MAAMgB,YAAvBC,SACSC,KAAI,SAAAC,GAAS,IAClBC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,GAAInB,EAAQiB,EAARjB,KACpB,OAAO,cAAC,EAAD,CAAaD,KAAMmB,EAAkBlB,KAAMA,GAAVmB,O,EAIhDC,cAAgB,SAACC,GACbC,QAAQC,IAAIF,EAASG,gBACrB,EAAK1B,MAAM2B,YAAYJ,EAASG,iB,oGAG1B,IAECE,EAAkBC,KAAK7B,MAAMgB,YAA7BY,eACP,OACI,qCACI,qBAAKpB,UAAS,UAAKH,IAAEyB,aAArB,SACI,sBAAKtB,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAS,UAAKH,IAAE0B,QAAP,YAAkB1B,IAAE2B,QAAlC,UACI,yCACA,oBAAIxB,UAAS,UAAKH,IAAE4B,cAAP,sCAMrB,qBAAKzB,UAAU,oBAAf,SACI,sBAAKA,UAAS,UAAKH,IAAEY,SAAP,YAAmBZ,IAAE2B,QAAnC,UACI,0CACA,oBAAIxB,UAAS,UAAKH,IAAE6B,gBAApB,SAEKL,KAAKd,eAAea,eAOzC,qBAAKpB,UAAS,cAASH,IAAE8B,gBAAzB,SACI,cAACC,EAAD,CACIC,SAAUR,KAAKP,yB,GAjDjBgB,IAAMC,WAmFtBH,EAAsBI,YAAW,CACnCC,KAAM,wBADkBD,EAxBL,SAACxC,GAAW,IAExB0C,EAAgB1C,EAAhB0C,aACP,OACI,uBAAML,SAAUK,EAAclC,UAAU,YAAxC,UACI,wBACImC,KAAM,SADV,kBAKA,cAACC,EAAA,EAAD,CACIC,YAAY,6HACZC,KAAM,iBACNC,UAAWC,IACXC,aAAc,UACdC,SAAU,CACNxC,EACAE,W,uBCjFduC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,KAAMD,EAAMC,KAAKC,S,gBCsBfC,EAAmBC,YACrBC,aArBoB,SAACL,GAErB,MAAM,CACFpC,YAFkBoC,EAAfpC,gBAMgB,SAAC0C,GACxB,MAAM,CACF/B,YAAa,SAACD,GACVgC,EAASC,YAAmBjC,KAEhCkC,qBAAsB,SAACC,GACnBH,EAASI,YAA4BD,UDZjB,SAACtB,GAAe,IACtCwB,EADqC,uKAInC,OAAIlC,KAAK7B,MAAMqD,KACR,cAACd,EAAD,eAAeV,KAAK7B,QADC,cAAC,IAAD,CAAUgE,GAAI,eAJP,GACX1B,IAAMC,WAUtC,OAFuCkB,YAAQN,EAARM,CAAoCM,KCUtDP,CAGvB1C,GAGayC","file":"static/js/4.8550c732.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMain\":\"dialogs_dialogsMain__tEcdV\",\"header\":\"dialogs_header__24BAe\",\"dialogs\":\"dialogs_dialogs__3w2gw\",\"dialogs__list\":\"dialogs_dialogs__list__1oZL2\",\"messages__list\":\"dialogs_messages__list__27odX\",\"messages\":\"dialogs_messages__5UyH8\",\"addMesageBlock\":\"dialogs_addMesageBlock__32HYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages__item\":\"messageItem_messages__item__1gSqZ\",\"itsMy\":\"messageItem_itsMy__1nHnr\",\"itsNotMy\":\"messageItem_itsNotMy__ttzFA\"};","import React from 'react';\r\nimport s from './messageItem.module.css'\r\n\r\nconst MessageItem = (props) => {\r\n    const {text, date, ItsMy} = props\r\n    let msgClass = ''\r\n    if (ItsMy) msgClass = s.itsMy\r\n    else msgClass = s.itsNotMy\r\n    return (\r\n        <>\r\n        <li className={`${s.messages__item} ${msgClass}`}>\r\n            <p>{text}</p>\r\n            <sub>{date}</sub>\r\n                                       \r\n        </li>\r\n        <br/> \r\n        </>            \r\n    )\r\n}\r\n\r\nexport {MessageItem}","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from'./dialogs.module.css';\r\nimport {MessageItem} from './messageItem/messageItem'\r\nimport {TextInput} from '../common/formsControls/formsControls'\r\nimport {validators} from '../../utils/validators/validators'\r\n\r\nconst {required, maxLenghtCreator} = validators\r\nconst maxLenght10 = maxLenghtCreator(10)\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    renderMessages = () => {\r\n        const {messages} = this.props.dialogsPage\r\n        return messages.map(item => {\r\n            const {message, id, date} = item\r\n            return <MessageItem text={message} key={id} date={date}/>\r\n        })\r\n    }\r\n\r\n    addNewMessage = (formdata) => {\r\n        console.log(formdata.newMessageBody)\r\n        this.props.sendMessage(formdata.newMessageBody)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {selectedDialog} = this.props.dialogsPage\r\n        return(\r\n            <>\r\n                <div className={`${s.dialogsMain}`}>\r\n                    <div className='row'>\r\n                        <div className='col-sm-3 col-lg-5'>\r\n                            <div className={`${s.dialogs} ${s.header}`}>\r\n                                <h4>Dialogs</h4>\r\n                                <ul className={`${s.dialogs__list} navbar-nav mr-auto sidenav` }>\r\n    \r\n                                </ul>\r\n                            </div>\r\n    \r\n                        </div>\r\n                        <div className='col-sm-9 col-lg-7'>\r\n                            <div className={`${s.messages} ${s.header}`}>\r\n                                <h4>messages</h4>\r\n                                <ul className={`${s.messages__list}`}>\r\n    \r\n                                    {this.renderMessages(selectedDialog)}\r\n    \r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`row ${s.addMesageBlock}`}>\r\n                    <AddMessageReduxForm\r\n                        onSubmit={this.addNewMessage}\r\n                    />\r\n                </div>\r\n            </>\r\n    \r\n        )        \r\n    }\r\n}\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const {handleSubmit} = props\r\n    return (\r\n        <form onSubmit={handleSubmit} className='col-sm-12'> \r\n            <button\r\n                type={'submit'}\r\n                // onClick={this.onSendMessage}\r\n            >send\r\n            </button>\r\n            <Field\r\n                placeholder='Веедите ваше сообщение'\r\n                name={'newMessageBody'}\r\n                component={TextInput}\r\n                autoComplete={'message'}\r\n                validate={[\r\n                    required,\r\n                    maxLenght10\r\n                ]}\r\n            />\r\n        </form>        \r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm ({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n\r\nexport {Dialogs}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        \r\n        render() {\r\n            if(!this.props.auth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","\r\nimport {Dialogs} from './dialogs'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {sendMessageCreator, updateSelectedDialogCreator} from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {dialogsPage} = state\r\n    return{\r\n        dialogsPage: dialogsPage,       \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n        updateSelectedDialog: (userId) => {\r\n            dispatch(updateSelectedDialogCreator(userId))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}